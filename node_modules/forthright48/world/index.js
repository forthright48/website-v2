(function(){
    "use strict";

    var path = require ( "path" );

    var root = path.join ( __dirname, "../../.." );
    var secret = require ( path.join ( root, "/secret.js" ) );
    var bcryptWorkLoad = 10;

    module.exports = {
        root: root,
        handleError: handleError,
        secret: secret,
        getLayoutContext: getLayoutContext,
        myRender: myRender,
        bcryptWorkLoad: bcryptWorkLoad

    };

    /*******************************************
    Implementation
    *******************************************/

    // Create an object wrapper for errors
    function handleError ( res, error, realError ) {
        return res.render ( "error", {
            subtitle: "error",
            error: error,
            realError: realError
        });
    }

    // Returns Context of Layout
    function getLayoutContext( req, subtitle ) {
        var session = req.session || {};
        return {
            header: {
                isLoggedIn: session.isLoggedIn,
                username: session.username,
                subtitle: subtitle
            }
        };
    }

    function getSubtitle ( view ) {
        if ( view === 'success' ) return view;
        else if ( view === 'home' ) return view;
        else if ( view === 'problem-creation/problem-creation' ) return 'problem-creation';
        else if ( view === 'gateway/gateway') return 'gateway';
        return "";
    }

    // Automatically injects the context of layout
    function myRender ( req, res, view, context ) {
        context = context || {}; ///In case it is empty
        var subtitle = getSubtitle ( view );
        context.layoutContext = getLayoutContext ( req, subtitle );

        return res.render ( view, context );
    }

}());
